{"ast":null,"code":"import Matter from \"matter-js\";\n\nvar Physics = function Physics(entities, _ref) {\n  var touches = _ref.touches,\n      time = _ref.time;\n  var engine = entities.physics.engine;\n  var ball = entities.ball.body;\n  engine.world.gravity.y = 1;\n  Matter.Body.setVelocity(ball, {\n    x: 5,\n    y: 0\n  });\n  touches.filter(function (t) {\n    return t.type === \"press\";\n  }).forEach(function (t) {\n    Matter.Body.applyForce(ball, ball.position, {\n      x: 0.00,\n      y: -0.10\n    });\n  });\n  Matter.Engine.update(engine, time.delta);\n  return entities;\n};\n\nexport default Physics;","map":{"version":3,"sources":["/Users/imogenkraak/Desktop/Projects/turtle-slide/turtle-slide/Physics.js"],"names":["Matter","Physics","entities","touches","time","engine","physics","ball","body","world","gravity","y","Body","setVelocity","x","filter","t","type","forEach","applyForce","position","Engine","update","delta"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,QAAiC;AAAA,MAApBC,OAAoB,QAApBA,OAAoB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC7C,MAAIC,MAAM,GAAGH,QAAQ,CAACI,OAAT,CAAiBD,MAA9B;AACA,MAAIE,IAAI,GAAGL,QAAQ,CAACK,IAAT,CAAcC,IAAzB;AACAH,EAAAA,MAAM,CAACI,KAAP,CAAaC,OAAb,CAAqBC,CAArB,GAAyB,CAAzB;AACAX,EAAAA,MAAM,CAACY,IAAP,CAAYC,WAAZ,CAAwBN,IAAxB,EAA8B;AAACO,IAAAA,CAAC,EAAE,CAAJ;AAAOH,IAAAA,CAAC,EAAE;AAAV,GAA9B;AAIAR,EAAAA,OAAO,CAACY,MAAR,CAAe,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,KAAW,OAAf;AAAA,GAAhB,EAAwCC,OAAxC,CAAgD,UAAAF,CAAC,EAAI;AAAEhB,IAAAA,MAAM,CAACY,IAAP,CAAYO,UAAZ,CAAwBZ,IAAxB,EAA8BA,IAAI,CAACa,QAAnC,EAA6C;AAACN,MAAAA,CAAC,EAAC,IAAH;AAASH,MAAAA,CAAC,EAAE,CAAC;AAAb,KAA7C;AACxD,GADC;AAGAX,EAAAA,MAAM,CAACqB,MAAP,CAAcC,MAAd,CAAqBjB,MAArB,EAA6BD,IAAI,CAACmB,KAAlC;AAEA,SAAOrB,QAAP;AACH,CAdD;;AAgBA,eAAeD,OAAf","sourcesContent":["import Matter from \"matter-js\";\n\nconst Physics = (entities, { touches, time }) => {\n    let engine = entities.physics.engine;\n    let ball = entities.ball.body;\n    engine.world.gravity.y = 1;\n    Matter.Body.setVelocity(ball, {x: 5, y: 0} )\n    \n\n\n    touches.filter(t => t.type === \"press\").forEach(t => { Matter.Body.applyForce( ball, ball.position, {x:0.00, y: -0.10})\n  });\n\n    Matter.Engine.update(engine, time.delta);\n\n    return entities;\n};\n\nexport default Physics;"]},"metadata":{},"sourceType":"module"}